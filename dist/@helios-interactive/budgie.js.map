{"version":3,"sources":["budgie.concat.js"],"names":["Budgie","items","selector","options","Object","assign","constructor","defaultOptions","isNew","budgieId","Math","floor","random","self","pop","a","Array","prototype","apply","arguments","popItem","push","pushItem","shift","shiftItem","unshift","unshiftItem","splice","updateAllElements","start","parentContainer","getElement","classList","add","budgieFlexContainer","document","createElement","appendChild","setCSS","container","scrollDirection","scrollProperty","budgieElement","elementMeasurement","budgieElementMeasure","direction","width","height","addEventListener","onScroll","numberAcross","numberHigh","numberWide","length","eleWidth","parseInt","window","getComputedStyle","numOfSheets","styleSheets","cssRules","insertRule","imageFit","i","forEach","item","id","numberLeftWithOddEnding","newFillerItem","createBudgieDiv","elementsOnScreen","blankEle","filler","realElements","from","querySelectorAll","insertAdjacentElement","slice","reverse","element","ele","cloneNode","elementsToDupe","addLastItem","updateBeginningAndEndingItems","removeLastItem","updateExistingItems","elementCount","eleIndex","elements","getElementsByClassName","parentNode","removeChild","itemIndex","newElement","index","insertBefore","nextSibling","innerDiv","createItemAsElement","innerHTML","outerHTML","Error","extension","match","substr","imageExtensions","videoExtensions","console","log","includes","src","method","updateListStart","updateListEnding","numberAtTop","dupedElements","topOfDupedElements","lastRowOfRealElements","firstRealElement","numberOff","redraw","operator","lastElements","firstElements","lastElement","firstElement","remove","appendEndingItems","measure","parseFloat","ceil","scrollContainerSize","scrollSizeMeasurement","fps","scrollContainer","parentElement","currentScroll","viewMeasure","scrollSpeed","secondsOnPage","stop","interval","setInterval","inverted","setupContainer","insertItems","prependStartingItems","setupScrollProperties","autoScroll","startAnimation","clearInterval","splitSelector","substring","getElementById","global"],"mappings":"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","file":"budgie.js","sourcesContent":["'use strict';\r\nclass Budgie {\r\n\r\n  /**\r\n   *\r\n   * @param items\r\n   * @param selector\r\n   * @param options\r\n   */\r\n  constructor(items, selector, options = {}) {\r\n\r\n    this.selector = selector;\r\n    this.options = Object.assign(this.constructor.defaultOptions(), options);\r\n\r\n    this.isNew = true;\r\n    this.budgieId = Math.floor((1 + Math.random()) * 0x10000);\r\n    this.items = items;\r\n\r\n    var self = this;\r\n    this.items.pop = function(){\r\n      let a = Array.prototype.pop.apply(self.items, arguments);\r\n      self.popItem();\r\n      return a;\r\n    };\r\n    this.items.push = function(){\r\n      let a = Array.prototype.push.apply(self.items, arguments);\r\n      self.pushItem();\r\n      return a;\r\n    };\r\n    this.items.shift = function(){\r\n      let a = Array.prototype.shift.apply(self.items, arguments);\r\n      self.shiftItem();\r\n      return a;\r\n    };\r\n    this.items.unshift = function(){\r\n      let a = Array.prototype.unshift.apply(self.items, arguments);\r\n      self.unshiftItem();\r\n      return a;\r\n    };\r\n    this.items.splice = function(){\r\n      let a = Array.prototype.splice.apply(self.items, arguments);\r\n      self.updateAllElements();\r\n      return a;\r\n    };\r\n\r\n    this.start();\r\n  }\r\n\r\n  static defaultOptions() {\r\n    return {\r\n      'numberHigh': 1,\r\n      'numberWide': 1,\r\n      'noScrollIfNoOverflow': true,\r\n      'direction': 'vertical',\r\n      'secondsOnPage': 1.0,\r\n      'stopOnHover': false,\r\n      'inverted': false,\r\n      'autoScroll': true,\r\n      'userNavigation': false,\r\n      'imageFit': 'cover',\r\n      'fps': 60\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param selector either an id, class, or DOM element\r\n   * @returns {{}} returns the DOM element that matches the selector\r\n   */\r\n  static getElement(selector) {\r\n    // allow dom elements to get passed in directly\r\n    if(typeof selector === 'object' ) return selector;\r\n\r\n    let splitSelector = selector.substring(0, 1);\r\n    switch(splitSelector){\r\n      case '.':\r\n        return document.getElementsByClassName(selector.substring(1))[0];\r\n        break;\r\n      case '#':\r\n        return document.getElementById(selector.substring(1));\r\n        break;\r\n      default:\r\n        throw new Error(\"The selector must be a class or id, prepended by the identifier ('.'/'#')\");\r\n    }\r\n  }\r\n\r\n  setupContainer() {\r\n    let parentContainer = this.constructor.getElement(this.selector);\r\n    parentContainer.classList.add(`budgie-flex-container-parent`);\r\n    parentContainer.classList.add(`budgie-flex-container-parent-${this.budgieId}`);\r\n    this.parentContainer = parentContainer;\r\n\r\n    let budgieFlexContainer = document.createElement('div');\r\n    budgieFlexContainer.classList.add('budgie-flex-container');\r\n    budgieFlexContainer.classList.add(`budgie-container-${this.budgieId}`);\r\n    parentContainer.appendChild(budgieFlexContainer);\r\n    this.setCSS(budgieFlexContainer);\r\n\r\n    this.container = budgieFlexContainer;\r\n  }\r\n\r\n  setupScrollProperties() {\r\n    let self = this;\r\n    let scrollDirection = this.scrollProperty();\r\n\r\n    if(this.isNew) {\r\n      let budgieElement = this.elementMeasurement(`budgie-flex-item-${this.budgieId}`)\r\n      let budgieElementMeasure = this.options.direction === 'horizontal' ? budgieElement.width : budgieElement.height\r\n\r\n      // Set the scroll position to the top of the non-duped elements\r\n      this.parentContainer[scrollDirection] = budgieElementMeasure;\r\n    }\r\n\r\n    this.parentContainer.addEventListener(\"scroll\", function(){self.onScroll(scrollDirection)});\r\n  }\r\n\r\n  numberLeftWithOddEnding(){\r\n    let numberAcross = (this.options.direction === 'horizontal') ? this.options.numberHigh : this.options.numberWide;\r\n    return (this.items.length % numberAcross);\r\n  }\r\n\r\n  setCSS(container){\r\n    const eleWidth = parseInt(window.getComputedStyle(container).width);\r\n    let numOfSheets = 0;\r\n    if(document.styleSheets[0].cssRules) {\r\n      numOfSheets = document.styleSheets[0].cssRules.length;\r\n    }\r\n\r\n    // Take the larger of the two\r\n    const numberAcross = this.options.numberHigh >= this.options.numberWide ? this.options.numberHigh : this.options.numberWide;\r\n\r\n    // Width in %\r\n    const width = ((eleWidth / this.options.numberWide / eleWidth) * 100);\r\n    const height = (100 / this.options.numberHigh);\r\n\r\n    document.styleSheets[0].insertRule(`.budgie-flex-item-${this.budgieId}{width: ${width}%; height: ${height}%;}`, numOfSheets);\r\n    document.styleSheets[0].insertRule(`.budgie-flex-item-image-${this.budgieId}{background-size: ${this.options.imageFit};}`, numOfSheets);\r\n\r\n    for(let i = numberAcross - 1; i >= 0; i--){\r\n      document.styleSheets[0].insertRule(`.budgie-flex-item-${this.budgieId}--filler-${i}{width: ${width*(this.options.numberWide - i)/2}%; height: ${height*(this.options.numberHigh - i)/2}%; flex-grow: 1;}`, numOfSheets);\r\n    }\r\n\r\n    let direction = this.options.direction === 'horizontal' ? 'column' : 'row';\r\n    document.styleSheets[0].insertRule(`.budgie-container-${this.budgieId}{flex-direction: ${direction};}`, numOfSheets);\r\n\r\n    document.styleSheets[0].insertRule(`.budgie-flex-container-parent-${this.budgieId}{overflow-x: ${this.options.direction === 'horizontal' ? 'scroll' : 'hidden'}; overflow-y: ${this.options.direction === 'vertical' ? 'scroll' : 'hidden'}}`, numOfSheets);\r\n  }\r\n\r\n  insertItems(){\r\n    this.items.forEach((item, id) => {\r\n      // Add a filler item so that odd ending lists will have a centered ending\r\n      if(this.numberLeftWithOddEnding() > 0 && (this.items.length - this.numberLeftWithOddEnding() === id)){\r\n        this.container.appendChild(this.newFillerItem());\r\n      }\r\n\r\n      // Add the item\r\n      this.container.appendChild(this.createBudgieDiv(item, id));\r\n\r\n      // Add a filler item so that odd ending lists will have a centered ending\r\n      if(this.numberLeftWithOddEnding() > 0 && (this.items.length === id + 1)){\r\n        this.container.appendChild(this.newFillerItem());\r\n      }\r\n    });\r\n    if(this.items.length < this.elementsOnScreen()){\r\n      // Append an extra div so that new items can be added\r\n      let blankEle = document.createElement('div');\r\n      blankEle.classList.add(`budgie-flex-item-${this.budgieId}--blank`);\r\n      this.container.appendChild(blankEle);\r\n    }\r\n  }\r\n\r\n\r\n  newFillerItem(){\r\n    let filler = document.createElement('div');\r\n    filler.classList.add(`budgie-flex-item-${this.budgieId}--filler`);\r\n    filler.classList.add(`budgie-flex-item-${this.budgieId}--filler-${this.numberLeftWithOddEnding()}`);\r\n    return filler;\r\n  }\r\n\r\n  /**\r\n   * Prepends duplicate items equal to the last row/column of items\r\n   */\r\n  prependStartingItems(){\r\n    let elementsOnScreen = this.elementsOnScreen();\r\n    // Store a list of the non duplicated elements\r\n    const realElements = Array.from(document.querySelectorAll(`.budgie-flex-item-${this.budgieId}:not(.budgie-flex-item-${this.budgieId}--duplicate)`));\r\n\r\n    // If the number of elements is greater than the number that fit in the given area\r\n    if(this.items.length > elementsOnScreen){\r\n      // Prepends duplicate items equal to the number of elementsOnScreen\r\n      if(this.numberLeftWithOddEnding() > 0) {\r\n        // The column or row is NOT full, fillers are needed\r\n        // Add a filler item so that odd ending lists will have a centered ending\r\n        this.container.insertAdjacentElement('afterbegin', this.newFillerItem());\r\n\r\n        // Add the duplicated elements\r\n        realElements.slice(\r\n          realElements.length - this.numberLeftWithOddEnding(),\r\n          realElements.length\r\n        )\r\n          .reverse()\r\n          .forEach((element) => {\r\n            let ele = element.cloneNode(true);\r\n            ele.classList.add(`budgie-flex-item-${this.budgieId}--duplicate`);\r\n            this.container.insertAdjacentElement('afterbegin', ele);\r\n          });\r\n\r\n        // Add a filler item so that odd ending lists will have a centered ending\r\n        this.container.insertAdjacentElement('afterbegin', this.newFillerItem());\r\n      } else {\r\n        // The column or row is full, not fillers needed\r\n        let elementsToDupe = this.options.direction === 'horizontal' ? this.options.numberHigh : this.options.numberWide;\r\n\r\n        // Add the duplicated elements\r\n        realElements.slice(\r\n          realElements.length - elementsToDupe,\r\n          realElements.length\r\n        )\r\n          .reverse()\r\n          .forEach((element) => {\r\n            let ele = element.cloneNode(true);\r\n            ele.classList.add(`budgie-flex-item-${this.budgieId}--duplicate`);\r\n            this.container.insertAdjacentElement('afterbegin', ele);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Appends duplicate items equal to the number that fit in the view (numberHigh * numberWide)\r\n   */\r\n  appendEndingItems(){\r\n    let elementsOnScreen = this.elementsOnScreen();\r\n    // Store a list of the non duplicated elements\r\n    const realElements = Array.from(document.querySelectorAll(`.budgie-flex-item-${this.budgieId}:not(.budgie-flex-item-${this.budgieId}--duplicate)`));\r\n\r\n    // If the number of elements is greater than the number that fit in the given area\r\n    if(this.items.length > elementsOnScreen){\r\n      // Appends duplicate items equal to the number of elementsOnScreen\r\n      realElements.slice(\r\n        0,\r\n        elementsOnScreen\r\n      )\r\n        .forEach((element) => {\r\n          let ele = element.cloneNode(true);\r\n          ele.classList.add(`budgie-flex-item-${this.budgieId}--duplicate`);\r\n          ele.classList.add(`budgie-flex-item-${this.budgieId}--duplicate-ending`);\r\n          this.container.insertAdjacentElement('beforeend', ele);\r\n        });\r\n    }\r\n  }\r\n\r\n  elementsOnScreen(){\r\n    return parseInt(this.options.numberHigh) * parseInt(this.options.numberWide);\r\n  }\r\n\r\n  pushItem(){\r\n    this.addLastItem();\r\n    this.updateBeginningAndEndingItems('add');\r\n    this.start();\r\n  }\r\n\r\n  popItem(){\r\n    this.removeLastItem();\r\n    this.updateBeginningAndEndingItems('remove');\r\n    this.start();\r\n  }\r\n\r\n  shiftItem(){\r\n    this.updateExistingItems()\r\n    this.removeLastItem();\r\n    this.updateBeginningAndEndingItems('remove');\r\n    this.start();\r\n  }\r\n\r\n  unshiftItem(){\r\n    this.updateExistingItems()\r\n    this.addLastItem();\r\n    this.updateBeginningAndEndingItems('add');\r\n    this.start();\r\n  }\r\n\r\n  updateAllElements(){\r\n    let elementCount = document.querySelectorAll(`.budgie-flex-item-${this.budgieId}:not(.budgie-flex-item-${this.budgieId}--duplicate)`).length\r\n    if(this.items.length > elementCount){\r\n      for(let i = elementCount; i < this.items.length; i++){\r\n        this.addLastItem(i, i - 1);\r\n      }\r\n      this.updateBeginningAndEndingItems('add', true);\r\n    } else if (this.items.length < elementCount) {\r\n      for(let i = elementCount; i > this.items.length; i--){\r\n        this.removeLastItem(i-1);\r\n      }\r\n      this.updateBeginningAndEndingItems('remove', true);\r\n    }\r\n    this.updateExistingItems();\r\n    this.start();\r\n  }\r\n\r\n  removeLastItem(eleIndex = this.items.length){\r\n    let elements = document.getElementsByClassName(`budgie-${this.budgieId}-${eleIndex}`);\r\n    Array.from(elements).forEach(element => {\r\n      element.parentNode.removeChild(element);\r\n    })\r\n  }\r\n\r\n  addLastItem(itemIndex = this.items.length - 1, eleIndex = this.items.length - 2){\r\n    // eleIndex; subtract 2 to account for using length not index, and also to get the last element before the push\r\n    let elements = document.getElementsByClassName(`budgie-${this.budgieId}-${eleIndex}`);\r\n    if(!elements.length > 0){\r\n      elements = document.getElementsByClassName(`budgie-flex-item-${this.budgieId}--blank`)\r\n    }\r\n    let newElement = this.createBudgieDiv(this.items[itemIndex], itemIndex);\r\n    // Insert at the end of the main list\r\n    // We use index of 1, because the last few items are duplicated at the top\r\n    let index = 0\r\n    if(elements.length > 1) { index = 1 }\r\n    elements[index].parentNode.insertBefore(newElement, elements[index].nextSibling);\r\n  }\r\n\r\n  createBudgieDiv(item, itemIndex){\r\n    let element = document.createElement('div');\r\n\r\n    element.classList.add('budgie-flex-item');\r\n    element.classList.add(`budgie-flex-item-${this.budgieId}`);\r\n    element.classList.add(`budgie-${this.budgieId}-${itemIndex}`);\r\n\r\n    const innerDiv = this.createItemAsElement(item)\r\n\r\n    element.innerHTML = innerDiv.outerHTML;\r\n\r\n    return element;\r\n  }\r\n\r\n  createItemAsElement(item, itemIndex){\r\n    // If the item is a dom element, then return it\r\n    if(typeof item === 'object' ) return item;\r\n\r\n    if(typeof item !== 'string') throw new Error('Only DOM Elements and strings are accepted as budgie items')\r\n\r\n    let extension = item.match(/\\.{1}\\w*$/)\r\n    if(extension) {\r\n      extension = extension[0].substr(1)\r\n    }\r\n\r\n    const imageExtensions = ['jpg', 'gif', 'png'];\r\n    const videoExtensions = ['mp4','ogg', 'webm'];\r\n\r\n    console.log(item, extension)\r\n    let element;\r\n    if(imageExtensions.includes(extension)) {\r\n      element = document.createElement('img');\r\n      element.src = item\r\n    } else if(videoExtensions.includes(extension)) {\r\n      element = document.createElement('video');\r\n      element.src = item\r\n    }\r\n\r\n    if(!element) throw new Error(`Extension of: ${extension} is not supported.`)\r\n\r\n    return element;\r\n  }\r\n\r\n\r\n  /**\r\n   * Updates the existing items by replacing their html\r\n   */\r\n  updateExistingItems(){\r\n    this.items.forEach((item, index) => {\r\n      Array.from(document.getElementsByClassName(`budgie-${this.budgieId}-${index}`)).forEach((element) => {\r\n        // If the element has changed then update, otherwise do nothing\r\n        let newElement = this.createItemAsElement(item).outerHTML;\r\n        if (element.innerHTML !== newElement) {\r\n          element.innerHTML = newElement;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  updateBeginningAndEndingItems(method) {\r\n    this.updateListStart();\r\n    this.updateListEnding(method);\r\n  }\r\n\r\n  updateListStart() {\r\n    let numberAtTop;\r\n    if (this.numberLeftWithOddEnding() > 0) {\r\n      numberAtTop = this.numberLeftWithOddEnding();\r\n    } else {\r\n      numberAtTop = this.options.direction === 'horizontal' ? this.options.numberHigh : this.options.numberWide;\r\n    }\r\n\r\n    let realElements = Array.from(document.querySelectorAll(`.budgie-flex-item-${this.budgieId}:not(.budgie-flex-item-${this.budgieId}--duplicate)`));\r\n\r\n    // Trim the number of elements across one row to get rid of the bottom dupes\r\n    let dupedElements = Array.from(document.querySelectorAll(`.budgie-flex-item-${this.budgieId}.budgie-flex-item-${this.budgieId}--duplicate`));\r\n    let topOfDupedElements = dupedElements.slice(0, dupedElements.length - this.elementsOnScreen());\r\n\r\n    // These elements should become the new duped top row\r\n    let lastRowOfRealElements = realElements.slice(realElements.length - numberAtTop, realElements.length);\r\n\r\n    const firstRealElement = realElements[0];\r\n\r\n    console.log('Updating List Start', numberAtTop, lastRowOfRealElements, topOfDupedElements, firstRealElement)\r\n\r\n    // If there are more existing elements than we need, then trim that list\r\n    if(topOfDupedElements.length > lastRowOfRealElements.length) {\r\n      let numberOff = topOfDupedElements.length - lastRowOfRealElements.length\r\n      console.log('Need to remove', numberOff)\r\n\r\n      for(let i = 0; i < numberOff; i += 1) {\r\n        console.log('removing elements', i, topOfDupedElements[i])\r\n        topOfDupedElements[i].parentNode.removeChild(topOfDupedElements[i]);\r\n        topOfDupedElements.shift();\r\n      }\r\n    }\r\n\r\n    // Exit early if the list is not long enough to scroll\r\n    if(this.items.length <= this.elementsOnScreen()){ return; }\r\n\r\n    // Update the existing elements, and add new if needed\r\n    lastRowOfRealElements.forEach((element, index) => {\r\n      let ele = element.cloneNode(true);\r\n      ele.classList.add(`budgie-flex-item-${this.budgieId}--duplicate`);\r\n      if(topOfDupedElements[index]){\r\n        console.log('replacing existing')\r\n        topOfDupedElements[index].outerHTML = ele.outerHTML\r\n      } else {\r\n        console.log('adding new')\r\n        firstRealElement.parentNode.insertBefore(ele, firstRealElement);\r\n      }\r\n    })\r\n  }\r\n\r\n    /**\r\n     * Updates the Duplicated elements that are on the end of the list.\r\n     * @param method\r\n     * @param redraw\r\n     */\r\n    updateListEnding(method, redraw=false){\r\n    let operator;\r\n    if(method === 'remove'){\r\n      operator = 1\r\n    } else if(method === 'add'){\r\n      // this covers 'add'\r\n      operator = -1\r\n    } else {\r\n      throw new Error(\"Only 'add' and 'remove' are supported arguments\")\r\n    }\r\n\r\n    if(redraw)\r\n      Array.from(document.getElementsByClassName(`budgie-flex-item-${this.budgieId}--filler`)).forEach(element =>\r\n        element.parentNode.removeChild(element));\r\n\r\n    if(this.numberLeftWithOddEnding() > 0){\r\n      if(document.getElementsByClassName(`budgie-flex-item-${this.budgieId}--filler`).length === 0) {\r\n        let lastElements = Array.from(document.getElementsByClassName(`budgie-${this.budgieId}-${this.items.length - 1}`));\r\n        let firstElements = Array.from(document.getElementsByClassName(`budgie-${this.budgieId}-${this.items.length - this.numberLeftWithOddEnding()}`));\r\n        // Put fill around all elements that need it. At the top, and the bottom.\r\n        lastElements.forEach(lastElement => {\r\n          lastElement.parentNode.insertBefore(this.newFillerItem(), lastElement.nextSibling);\r\n        })\r\n        firstElements.forEach(firstElement => {\r\n          firstElement.parentNode.insertBefore(this.newFillerItem(), firstElement);\r\n        })\r\n      } else {\r\n        Array.from(document.getElementsByClassName(`budgie-flex-item-${this.budgieId}--filler`)).forEach((element) => {\r\n          element.classList.remove(`budgie-flex-item-${this.budgieId}--filler-${this.numberLeftWithOddEnding() + operator}`);\r\n          element.classList.add(`budgie-flex-item-${this.budgieId}--filler-${this.numberLeftWithOddEnding()}`);\r\n        });\r\n      }\r\n    } else {\r\n      Array.from(document.getElementsByClassName(`budgie-flex-item-${this.budgieId}--filler`)).forEach(element =>\r\n        element.parentNode.removeChild(element));\r\n    }\r\n\r\n    if(this.items.length <= this.elementsOnScreen()) {\r\n      Array.from(document.getElementsByClassName(`budgie-flex-item-${this.budgieId}--duplicate`)).forEach(element =>\r\n        element.parentNode.removeChild(element));\r\n\r\n      // Append an extra div so that new items can be added\r\n      if(document.getElementsByClassName(`budgie-flex-item-${this.budgieId}--blank`).length === 0){\r\n        let blankEle = document.createElement('div');\r\n        blankEle.classList.add(`budgie-flex-item-${this.budgieId}--blank`);\r\n        this.container.appendChild(blankEle);\r\n      }\r\n    }\r\n\r\n    if(this.items.length > this.elementsOnScreen() && document.getElementsByClassName(`budgie-flex-item-${this.budgieId}--duplicate-ending`).length === 0){\r\n      this.appendEndingItems();\r\n\r\n      Array.from(document.getElementsByClassName(`budgie-flex-item-${this.budgieId}--blank`)).forEach(blankEle =>\r\n        blankEle.parentNode.removeChild(blankEle));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the height and width measurements of the elements associated with the given selector\r\n   * @param selector\r\n   * @returns {{}} The height and width measurements of the element associated with the given selector.\r\n   */\r\n  elementMeasurement(selector){\r\n    let measure = {};\r\n    measure.height = parseFloat(window.getComputedStyle(document.getElementsByClassName(selector)[0]).height);\r\n    measure.width = parseFloat(window.getComputedStyle(document.getElementsByClassName(selector)[0]).width);\r\n    return measure;\r\n  }\r\n\r\n  /**\r\n   * Returns the size of the scroll container for this budgie instance\r\n   * @returns {number} Measurement in px.\r\n   */\r\n  scrollSizeMeasurement(){\r\n    switch(this.options.direction){\r\n      case 'vertical':\r\n        return this.elementMeasurement(`budgie-flex-item-${this.budgieId}`).height * (Math.ceil(this.items.length/this.options.numberWide));\r\n        break;\r\n      case 'horizontal':\r\n        return this.elementMeasurement(`budgie-flex-item-${this.budgieId}`).width * (Math.ceil(this.items.length/this.options.numberHigh));\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n  * Will reset the budgie elements scrollProperty if it hits a wrap point.\r\n  * @param {string} scrollDirection - The scroll direction of the given budgie instance.\r\n  *   can be 'scrollTop' or 'scrollLeft'\r\n  * @returns undefined\r\n  * */\r\n  onScroll(scrollDirection) {\r\n    let scrollContainerSize = this.scrollSizeMeasurement();\r\n\r\n    let budgieElement = this.elementMeasurement(`budgie-flex-item-${this.budgieId}`);\r\n    let budgieElementMeasure = Math.floor(this.options.direction === 'horizontal' ? budgieElement.width : budgieElement.height);\r\n\r\n    if((this.parentContainer[scrollDirection] >= scrollContainerSize + budgieElementMeasure)) {\r\n      this.parentContainer[scrollDirection] = budgieElementMeasure;\r\n    } else if((this.parentContainer[scrollDirection] <= 0 )) {\r\n      this.parentContainer[scrollDirection] = scrollContainerSize;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Will return the scroll property ('scrollTop' or 'scrollLeft') of the budgie instance\r\n   * @returns {String} The scroll property ('scrollTop' or 'scrollLeft') of the budgie instance\r\n   */\r\n  scrollProperty() {\r\n    if (this.options.direction === 'vertical') {\r\n      return 'scrollTop';\r\n    } else if (this.options.direction === 'horizontal') {\r\n      return 'scrollLeft';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Controls the scrolling animation when budgie is set to autoscroll\r\n   */\r\n  startAnimation() {\r\n    const fps =  this.options.fps;\r\n\r\n    let scrollDirection = this.scrollProperty();\r\n\r\n    let scrollContainer = this.container.parentElement;\r\n    let currentScroll;\r\n\r\n    let measure = this.elementMeasurement(`budgie-container-${this.budgieId}`);\r\n    let viewMeasure = (this.options.direction === \"horizontal\") ? measure.width : measure.height;\r\n    // This needs to be a whole number, so always round up\r\n    let scrollSpeed = Math.ceil(viewMeasure / this.options.secondsOnPage / fps);\r\n\r\n    // always clear interval to ensure that only one scroller is running\r\n    this.stop();\r\n    if(this.items.length > this.elementsOnScreen()){\r\n\r\n      this.interval = setInterval(() => {\r\n        let scrollDirection = this.scrollProperty()\r\n\r\n        currentScroll = scrollContainer[scrollDirection];\r\n\r\n        this.options.inverted ? (currentScroll += scrollSpeed) : (currentScroll -= scrollSpeed);\r\n\r\n        scrollContainer[scrollDirection] = currentScroll;\r\n      }, 1000/fps);\r\n    } else {\r\n      scrollContainer[scrollDirection] = 0;\r\n    }\r\n  }\r\n\r\n  //////////////\r\n  // Public methods for using the scroller\r\n  //////////////\r\n  // start the infinite scroll\r\n  start() {\r\n    if(this.isNew){\r\n      this.setupContainer();\r\n      this.insertItems();\r\n      this.appendEndingItems();\r\n      this.prependStartingItems();\r\n      this.setupScrollProperties();\r\n    }\r\n    if(this.options.autoScroll){\r\n      this.startAnimation();\r\n    }\r\n    this.isNew = false;\r\n  }\r\n\r\n  // stop the infinite scroll\r\n  stop() {\r\n    if(!this.interval) return false;\r\n    window.clearInterval(this.interval);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  remove() {\r\n    this.stop();\r\n    this.container.parentElement.classList.remove(`budgie-flex-container-parent-${this.budgieId}`);\r\n    this.container.parentElement.removeChild(this.container);\r\n  }\r\n\r\n  /*\r\n  * Changes the inversion of the budgie instance.\r\n  * */\r\n  changeInversion(){\r\n    this.options.inverted = !this.options.inverted;\r\n  }\r\n}\r\n\r\nif( typeof global !== 'undefined')\r\n  global.Budgie = Budgie;\r\n"]}