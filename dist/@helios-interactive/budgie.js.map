{"version":3,"sources":["budgie.concat.js"],"names":["styleBlock","document","createElement","innerHTML","head","appendChild","imageExtensions","videoExtensions","BudgieDom","Object","create","setupBudgieContainer","budgie","parentContainer","classList","add","budgieId","budgieFlexContainer","setupBudgieCSS","eleWidth","parseInt","window","getComputedStyle","budgieContainer","width","numOfSheets","styleSheets","cssRules","length","numberAcross","options","numberHigh","numberWide","height","insertRule","i","direction","setupBudgieScrollProperties","scrollProperty","budgieElement","measureElementWidthAndHeight","budgieElementMeasure","isHorizontal","addEventListener","mouseDown","event","onMouseMove","onScroll","insertBudgieElements","items","forEach","item","id","hasOddEnding","numberLeftWithOddEnding","createBudgieFillerElement","createBudgieElement","fitsInContainer","blankEle","filler","itemIndex","element","innerDiv","convertItemToElement","outerHTML","Error","extension","match","substr","includes","src","selector","measure","elementComputedStyle","querySelector","parseFloat","Budgie","assign","constructor","defaultOptions","Math","floor","random","self","pop","a","Array","prototype","apply","arguments","popItem","push","pushItem","shift","shiftItem","unshift","unshiftItem","splice","updateAllElements","budgieSetup","autoStart","budgieAnimate","elementsOnScreen","budgieElementMeasurement","undefined","scrollContainerSize","isVertical","getElementsByClassName","ceil","addLastItem","updateBeginningAndEndingItems","clearMeasurements","removeLastItem","updateExistingItems","elementCount","querySelectorAll","realElements","from","insertAdjacentElement","slice","reverse","ele","cloneNode","elementsToDupe","eleIndex","elements","parentNode","removeChild","newElement","index","insertBefore","nextSibling","method","updateListStart","updateListEnding","numberAtTop","dupedElements","topOfDupedElements","lastRowOfRealElements","firstRealElement","numberOff","redraw","operator","lastElements","firstElements","lastElement","firstElement","remove","appendEndingItems","scrollDirection","scrollSizeMeasurement","movementX","movementY","console","log","infiniteScroll","prependStartingItems","autoScroll","fps","currentScroll","budgieContainerMeasurements","viewMeasure","scrollSpeed","secondsOnPage","stopAnimate","interval","setInterval","parentElement","inverted","clearInterval","global"],"mappings":"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","file":"budgie.js","sourcesContent":["'use strict';\r\n\r\nlet styleBlock = document.createElement('style');\r\n\r\nstyleBlock.innerHTML = `\r\n.budgie-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center; }\r\n\r\n.budgie-item :first-child {\r\n  max-height: 100%;\r\n  max-width: 100%; }\r\n\r\n.budgie-container-parent {\r\n  overflow: -moz-scrollbars-none; }\r\n  .budgie-container-parent::-webkit-scrollbar {\r\n    display: none; }\r\n`;\r\n\r\ndocument.head.appendChild(styleBlock);;'use strict';\r\n\r\nconst imageExtensions = ['jpg', 'gif', 'png', 'bmp', 'jpeg'];\r\nconst videoExtensions = ['mp4','ogg', 'webm'];\r\n/**\r\n * BudgieDomSetup\r\n * This class handles tasks that involve interacting with the DOM at setup\r\n */\r\nconst BudgieDom = Object.create({\r\n  /**\r\n   * Creates the container inside the passed in element that allows for scrolling\r\n   * @param budgie\r\n   * @returns {Element} returns the budgie container\r\n   */\r\n  setupBudgieContainer : (budgie) => {\r\n    budgie.parentContainer.classList.add(`budgie-container-parent`);\r\n    budgie.parentContainer.classList.add(`budgie-container-parent-${budgie.budgieId}`);\r\n\r\n    let budgieFlexContainer = document.createElement('div');\r\n    budgieFlexContainer.classList.add('budgie-container');\r\n    budgieFlexContainer.classList.add(`budgie-container-${budgie.budgieId}`);\r\n    budgie.parentContainer.appendChild(budgieFlexContainer);\r\n\r\n    return budgieFlexContainer;\r\n  },\r\n\r\n  /**\r\n   * Create CSS classes for budgie items\r\n   * @param budgie\r\n   */\r\n  setupBudgieCSS : (budgie) => {\r\n    // Width of budgie container\r\n    const eleWidth = parseInt(window.getComputedStyle(budgie.budgieContainer).width);\r\n\r\n    let numOfSheets = 0;\r\n\r\n    // If there are already cssRules declared, then set the correct number of sheets to allow for addition\r\n    if(document.styleSheets[0].cssRules) {\r\n      numOfSheets = document.styleSheets[0].cssRules.length;\r\n    }\r\n\r\n    // Take the larger of the two as the number across\r\n    const numberAcross = budgie.options.numberHigh >= budgie.options.numberWide ?\r\n      budgie.options.numberHigh : budgie.options.numberWide;\r\n\r\n    // Width in %\r\n    const width = ((eleWidth / budgie.options.numberWide / eleWidth) * 100);\r\n    // Height in %\r\n    const height = (100 / budgie.options.numberHigh);\r\n\r\n    // Set the width and height of a single budgie element\r\n    document.styleSheets[0].insertRule(\r\n      `.budgie-item-${budgie.budgieId}{width: ${width}%; height: ${height}%;}`, numOfSheets\r\n    );\r\n\r\n    // Create CSS rules for all possible configurations of filler elements\r\n    for(let i = numberAcross - 1; i >= 0; i--){\r\n      document.styleSheets[0].insertRule(\r\n        `.budgie-item-${budgie.budgieId}--filler-${i}\r\n        {\r\n          width: ${width*(budgie.options.numberWide - i)/2}%; \r\n          height: ${height*(budgie.options.numberHigh - i)/2}%; flex-grow: 1;\r\n        }`,\r\n        numOfSheets\r\n      );\r\n    }\r\n\r\n    // Get the flex direction based on the budgie direction\r\n    let direction = budgie.options.direction === 'horizontal' ? 'column' : 'row';\r\n    // Set flex direction\r\n    document.styleSheets[0].insertRule(\r\n      `.budgie-container-${budgie.budgieId}{flex-direction: ${direction};}`,\r\n      numOfSheets\r\n    );\r\n\r\n    // Set the overflow properties based on the budgie direction\r\n    document.styleSheets[0].insertRule(\r\n      `.budgie-container-parent-${budgie.budgieId}\r\n      {\r\n        overflow-x: ${budgie.options.direction === 'horizontal' ? 'scroll' : 'hidden'}; \r\n        overflow-y: ${budgie.options.direction === 'vertical' ? 'scroll' : 'hidden'}\r\n      }`,\r\n      numOfSheets\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Sets the scroll properties based on the direction of budgie, and element size\r\n   * @param budgie\r\n   */\r\n  setupBudgieScrollProperties : (budgie) => {\r\n    // Get the scroll property (scrollTop or scrollLeft)\r\n    let scrollProperty = budgie.scrollProperty();\r\n\r\n    // Get a single budgie element's measure\r\n    let budgieElement = BudgieDom.measureElementWidthAndHeight(`.budgie-item-${budgie.budgieId}`);\r\n\r\n    // Use width or height based on budgie direction\r\n    let budgieElementMeasure = budgie.isHorizontal() ? budgieElement.width : budgieElement.height;\r\n\r\n    // Set the scroll position to the top of the non-duped elements\r\n    budgie.parentContainer[scrollProperty] = budgieElementMeasure;\r\n\r\n    // Bind events to handle scrolling with a mouse\r\n    budgie.parentContainer.addEventListener(\"mousedown\", () => {budgie.mouseDown = true});\r\n    budgie.parentContainer.addEventListener(\"mouseup\", () => {budgie.mouseDown = false});\r\n    budgie.parentContainer.addEventListener(\"mouseout\", () => {budgie.mouseDown = false});\r\n    budgie.parentContainer.addEventListener(\"mousemove\", (event) => { budgie.onMouseMove(event, scrollProperty) });\r\n\r\n    // Bind an event listener to the scroll event\r\n    budgie.parentContainer.addEventListener(\"scroll\", () => {budgie.onScroll(scrollProperty)});\r\n  },\r\n\r\n  /**\r\n   * Inserts the budgie elements. This should only be used during first setup\r\n   * @param budgie\r\n   */\r\n  insertBudgieElements : (budgie) => {\r\n    budgie.items.forEach((item, id) => {\r\n      // Add a filler item before the odd ending elements\r\n      // so that odd ending lists will have a centered ending\r\n      if(budgie.hasOddEnding() && (budgie.items.length - budgie.numberLeftWithOddEnding() === id)){\r\n        budgie.budgieContainer.appendChild(BudgieDom.createBudgieFillerElement(budgie));\r\n      }\r\n\r\n      // Add the item\r\n      budgie.budgieContainer.appendChild(BudgieDom.createBudgieElement(budgie, item, id));\r\n\r\n      // Add a filler item after the odd ending elements\r\n      // so that odd ending lists will have a centered ending\r\n      if(budgie.hasOddEnding() > 0 && (budgie.items.length === id + 1)){\r\n        budgie.budgieContainer.appendChild(BudgieDom.createBudgieFillerElement(budgie));\r\n      }\r\n    });\r\n\r\n    // If all the elements fit without scrolling, then add an extra div to allow for updates later\r\n    if(budgie.fitsInContainer()){\r\n      let blankEle = document.createElement('div');\r\n      blankEle.classList.add(`budgie-item-${budgie.budgieId}--blank`);\r\n      budgie.budgieContainer.appendChild(blankEle);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Creates a filler element with the class based on the number of left over budgie elements\r\n   * @param budgie\r\n   * @returns {Element}\r\n   */\r\n  createBudgieFillerElement : (budgie) => {\r\n    let filler = document.createElement('div');\r\n    filler.classList.add(`budgie-item-${budgie.budgieId}--filler`);\r\n    filler.classList.add(`budgie-item-${budgie.budgieId}--filler-${budgie.numberLeftWithOddEnding()}`);\r\n    return filler;\r\n  },\r\n\r\n  /**\r\n   * Creates a budgie element, and returns that element for use.\r\n   * @param budgie\r\n   * @param item\r\n   * @param itemIndex\r\n   * @returns {Element}\r\n   */\r\n  createBudgieElement : (budgie, item, itemIndex) => {\r\n    let element = document.createElement('div');\r\n\r\n    element.classList.add('budgie-item');\r\n    element.classList.add(`budgie-item-${budgie.budgieId}`);\r\n    element.classList.add(`budgie-${budgie.budgieId}-${itemIndex}`);\r\n\r\n    const innerDiv = BudgieDom.convertItemToElement(item)\r\n\r\n    element.innerHTML = innerDiv.outerHTML;\r\n\r\n    return element;\r\n  },\r\n\r\n  /**\r\n   * Will convert an item to a element so that it can be used in a budgie element\r\n   * @param item\r\n   * @returns {*}\r\n   */\r\n  convertItemToElement : (item) => {\r\n    // If the item is a dom element, then return it\r\n    if(typeof item === 'object' ) return item;\r\n\r\n    if(typeof item !== 'string') throw new Error('Only DOM Elements and strings are accepted as budgie items')\r\n\r\n    let extension = item.match(/\\.{1}\\w*$/)\r\n    if(extension) {\r\n      extension = extension[0].substr(1)\r\n    }\r\n\r\n    let element;\r\n    if(imageExtensions.includes(extension)) {\r\n      element = document.createElement('img');\r\n      element.src = item\r\n    } else if(videoExtensions.includes(extension)) {\r\n      element = document.createElement('video');\r\n      element.src = item\r\n    }\r\n\r\n    if(!element) throw new Error(`Extension of: ${extension} is not supported.`)\r\n\r\n    return element;\r\n  },\r\n\r\n  /**\r\n   * Returns the height and width measurements of the first element matching the given selector\r\n   * @param selector\r\n   * @returns {{}}\r\n   */\r\n  measureElementWidthAndHeight : (selector) => {\r\n    let measure = {};\r\n    const elementComputedStyle = window.getComputedStyle(document.querySelector(selector));\r\n    measure.height = parseFloat(elementComputedStyle.height);\r\n    measure.width = parseFloat(elementComputedStyle.width);\r\n    return measure;\r\n  },\r\n});;'use strict';\r\n\r\nclass Budgie {\r\n  /**\r\n   *\r\n   * @param items\r\n   * @param selector\r\n   * @param options\r\n   */\r\n  constructor(items, selector, options = {}) {\r\n    // Set the parentContainer to be accessable\r\n    this.parentContainer = document.querySelector(selector);\r\n    // Apply user options over the default options\r\n    this.options = Object.assign(this.constructor.defaultOptions(), options);\r\n    // Sets a random ID to allow for multiple budgies at once\r\n    this.budgieId = Math.floor((1 + Math.random()) * 0x10000);\r\n    // save a reference to the items array\r\n    this.items = items;\r\n    // boolean saying whether there is a mouse currently clicking the budgie element\r\n    this.mouseDown = false;\r\n\r\n    // Provide methods for manipulating the items array\r\n    var self = this;\r\n    this.items.pop = function(){\r\n      let a = Array.prototype.pop.apply(self.items, arguments);\r\n      self.popItem();\r\n      return a;\r\n    };\r\n    this.items.push = function(){\r\n      let a = Array.prototype.push.apply(self.items, arguments);\r\n      self.pushItem();\r\n      return a;\r\n    };\r\n    this.items.shift = function(){\r\n      let a = Array.prototype.shift.apply(self.items, arguments);\r\n      self.shiftItem();\r\n      return a;\r\n    };\r\n    this.items.unshift = function(){\r\n      let a = Array.prototype.unshift.apply(self.items, arguments);\r\n      self.unshiftItem();\r\n      return a;\r\n    };\r\n    this.items.splice = function(){\r\n      let a = Array.prototype.splice.apply(self.items, arguments);\r\n      self.updateAllElements();\r\n      return a;\r\n    };\r\n\r\n    // Gets the budgie scroller setup for use\r\n    this.budgieSetup();\r\n\r\n    // Will start the scrolling animation if autoStart is true\r\n    if (this.options.autoStart) {\r\n      this.budgieAnimate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Default budgie options are defined here\r\n   * @returns {{numberHigh: number, numberWide: number, direction: string, secondsOnPage: number, inverted: boolean, autoScroll: boolean, fps: number, infiniteScroll: boolean, autoStart: boolean}}\r\n   */\r\n  static defaultOptions() {\r\n    return {\r\n      'numberHigh': 1,\r\n      'numberWide': 1,\r\n      'direction': 'vertical',\r\n      'secondsOnPage': 1.0,\r\n      'inverted': false,\r\n      'autoScroll': true,\r\n      'fps': 60,\r\n      'infiniteScroll': true,\r\n      'autoStart': true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Will return true if budgie has vertical direction\r\n   * @returns {boolean}\r\n   */\r\n  isVertical() {\r\n    return this.options.direction === 'vertical';\r\n  }\r\n\r\n  /**\r\n   * Will return true if budgie has horizontal direction\r\n   * @returns {boolean}\r\n   */\r\n  isHorizontal() {\r\n    return this.options.direction === 'horizontal';\r\n  }\r\n\r\n  /**\r\n   * Will be true if the last column/row is not completely full\r\n   * @returns {boolean}\r\n   */\r\n  hasOddEnding() {\r\n    return this.numberLeftWithOddEnding() > 0;\r\n  }\r\n\r\n  /**\r\n   * Will return the number of elements that can fit in the budgie container\r\n   * @returns {number}\r\n   */\r\n  elementsOnScreen(){\r\n    return parseInt(this.options.numberHigh) * parseInt(this.options.numberWide);\r\n  }\r\n\r\n  /**\r\n   * Will be true if all budgie elements fit into container without scrolling\r\n   * @returns {boolean}\r\n   */\r\n  fitsInContainer() {\r\n    return this.items.length <= this.elementsOnScreen();\r\n  }\r\n\r\n  /**\r\n   * Will return the number of elements left on the last line.\r\n   * Will return 0 if the last line is full\r\n   * @returns {number}\r\n   */\r\n  numberLeftWithOddEnding(){\r\n    let numberAcross = this.isHorizontal() ? this.options.numberHigh : this.options.numberWide;\r\n    return (this.items.length % numberAcross);\r\n  }\r\n\r\n  /**\r\n   * Clears out measurements so that they will be remeasured\r\n   */\r\n  clearMeasurements(){\r\n    this.budgieElementMeasurement = undefined;\r\n    this.scrollContainerSize = undefined;\r\n  }\r\n\r\n  /**\r\n   * Will return the scroll property ('scrollTop' or 'scrollLeft') of the budgie instance\r\n   * @returns {String} The scroll property ('scrollTop' or 'scrollLeft') of the budgie instance\r\n   */\r\n  scrollProperty() {\r\n    if (this.isVertical()) {\r\n      return 'scrollTop';\r\n    } else if (this.isHorizontal()) {\r\n      return 'scrollLeft';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the height and width measurements of the elements associated with the given selector\r\n   * @param selector\r\n   * @returns {{}} The height and width measurements of the element associated with the given selector.\r\n   */\r\n  elementMeasurement(selector){\r\n    let measure = {};\r\n    measure.height = parseFloat(window.getComputedStyle(document.getElementsByClassName(selector)[0]).height);\r\n    measure.width = parseFloat(window.getComputedStyle(document.getElementsByClassName(selector)[0]).width);\r\n    return measure;\r\n  }\r\n\r\n  /**\r\n   * Returns the size of the scroll container for this budgie instance\r\n   * @returns {number} Measurement in px.\r\n   */\r\n  scrollSizeMeasurement(){\r\n    switch(this.options.direction){\r\n      case 'vertical':\r\n        return BudgieDom.measureElementWidthAndHeight(`.budgie-item-${this.budgieId}`).height * (Math.ceil(this.items.length/this.options.numberWide));\r\n        break;\r\n      case 'horizontal':\r\n        return BudgieDom.measureElementWidthAndHeight(`.budgie-item-${this.budgieId}`).width * (Math.ceil(this.items.length/this.options.numberHigh));\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the budgie instance based on array changes\r\n   */\r\n  pushItem(){\r\n    this.addLastItem();\r\n    this.updateBeginningAndEndingItems('add');\r\n    this.clearMeasurements();\r\n    this.budgieAnimate();\r\n  }\r\n\r\n  /**\r\n   * Updates the budgie instance based on array changes\r\n   */\r\n  popItem(){\r\n    this.removeLastItem();\r\n    this.updateBeginningAndEndingItems('remove');\r\n    this.clearMeasurements();\r\n    this.budgieAnimate();\r\n  }\r\n\r\n  /**\r\n   * Updates the budgie instance based on array changes\r\n   */\r\n  shiftItem(){\r\n    this.updateExistingItems()\r\n    this.removeLastItem();\r\n    this.updateBeginningAndEndingItems('remove');\r\n    this.clearMeasurements();\r\n    this.budgieAnimate();\r\n  }\r\n\r\n  /**\r\n   * Updates the budgie instance based on array changes\r\n   */\r\n  unshiftItem(){\r\n    this.updateExistingItems()\r\n    this.addLastItem();\r\n    this.updateBeginningAndEndingItems('add');\r\n    this.clearMeasurements();\r\n    this.budgieAnimate();\r\n  }\r\n\r\n  /**\r\n   * Updates the budgie instance based on array changes\r\n   */\r\n  updateAllElements(){\r\n    let elementCount = document.querySelectorAll(`.budgie-item-${this.budgieId}:not(.budgie-item-${this.budgieId}--duplicate)`).length\r\n    if(this.items.length > elementCount){\r\n      for(let i = elementCount; i < this.items.length; i++){\r\n        this.addLastItem(i, i - 1);\r\n      }\r\n      this.updateBeginningAndEndingItems('add', true);\r\n    } else if (this.items.length < elementCount) {\r\n      for(let i = elementCount; i > this.items.length; i--){\r\n        this.removeLastItem(i-1);\r\n      }\r\n      this.updateBeginningAndEndingItems('remove', true);\r\n    }\r\n    this.updateExistingItems();\r\n    this.clearMeasurements();\r\n    this.budgieAnimate();\r\n  }\r\n\r\n  /**\r\n   * Prepends duplicate items equal to the last row/column of items\r\n   */\r\n  prependStartingItems(){\r\n    let elementsOnScreen = this.elementsOnScreen();\r\n    // Store a list of the non duplicated elements\r\n    const realElements = Array.from(document.querySelectorAll(`.budgie-item-${this.budgieId}:not(.budgie-item-${this.budgieId}--duplicate)`));\r\n\r\n    // If the number of elements is greater than the number that fit in the given area\r\n    if(!this.fitsInContainer()){\r\n      // Prepends duplicate items equal to the number of elementsOnScreen\r\n\r\n      if(this.hasOddEnding()) {\r\n\r\n        // The column or row is NOT full, fillers are needed\r\n        // Add a filler item so that odd ending lists will have a centered ending\r\n        this.budgieContainer.insertAdjacentElement('afterbegin', BudgieDom.createBudgieFillerElement(this));\r\n\r\n        // Add the duplicated elements\r\n        realElements.slice(\r\n          realElements.length - this.numberLeftWithOddEnding(),\r\n          realElements.length\r\n        )\r\n          .reverse()\r\n          .forEach((element) => {\r\n            let ele = element.cloneNode(true);\r\n            ele.classList.add(`budgie-item-${this.budgieId}--duplicate`);\r\n            this.budgieContainer.insertAdjacentElement('afterbegin', ele);\r\n          });\r\n\r\n        // Add a filler item so that odd ending lists will have a centered ending\r\n        this.budgieContainer.insertAdjacentElement('afterbegin', BudgieDom.createBudgieFillerElement(this));\r\n      } else {\r\n        // The column or row is full, not fillers needed\r\n        let elementsToDupe = this.isHorizontal() ? this.options.numberHigh : this.options.numberWide;\r\n\r\n        // Add the duplicated elements\r\n        realElements.slice(\r\n          realElements.length - elementsToDupe,\r\n          realElements.length\r\n        )\r\n          .reverse()\r\n          .forEach((element) => {\r\n            let ele = element.cloneNode(true);\r\n            ele.classList.add(`budgie-item-${this.budgieId}--duplicate`);\r\n            this.budgieContainer.insertAdjacentElement('afterbegin', ele);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Appends duplicate items equal to the number that fit in the view (numberHigh * numberWide)\r\n   */\r\n  appendEndingItems(){\r\n    let elementsOnScreen = this.elementsOnScreen();\r\n    // Store a list of the non duplicated elements\r\n    const realElements = Array.from(document.querySelectorAll(`.budgie-item-${this.budgieId}:not(.budgie-item-${this.budgieId}--duplicate)`));\r\n\r\n    // If the number of elements is greater than the number that fit in the given area\r\n    if(!this.fitsInContainer()){\r\n      // Appends duplicate items equal to the number of elementsOnScreen\r\n      realElements.slice(\r\n        0,\r\n        elementsOnScreen\r\n      )\r\n        .forEach((element) => {\r\n          let ele = element.cloneNode(true);\r\n          ele.classList.add(`budgie-item-${this.budgieId}--duplicate`);\r\n          ele.classList.add(`budgie-item-${this.budgieId}--duplicate-ending`);\r\n          this.budgieContainer.insertAdjacentElement('beforeend', ele);\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an item from the end of the budgie list\r\n   * @param eleIndex\r\n   */\r\n  removeLastItem(eleIndex = this.items.length){\r\n    let elements = document.getElementsByClassName(`budgie-${this.budgieId}-${eleIndex}`);\r\n    Array.from(elements).forEach(element => {\r\n      element.parentNode.removeChild(element);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Adds an item to the end of the budgie list\r\n   * @param itemIndex\r\n   * @param eleIndex\r\n   */\r\n  addLastItem(itemIndex = this.items.length - 1, eleIndex = this.items.length - 2){\r\n    // eleIndex; subtract 2 to account for using length not index, and also to get the last element before the push\r\n    let elements = document.getElementsByClassName(`budgie-${this.budgieId}-${eleIndex}`);\r\n    if(!elements.length > 0){\r\n      elements = document.getElementsByClassName(`budgie-item-${this.budgieId}--blank`)\r\n    }\r\n\r\n    let newElement = BudgieDom.createBudgieElement(this, this.items[itemIndex], itemIndex);\r\n    // Insert at the end of the main list\r\n    // We use index of 1, because the last few items are duplicated at the top\r\n    let index = 0\r\n    if(elements.length > 1) { index = 1 }\r\n    elements[index].parentNode.insertBefore(newElement, elements[index].nextSibling);\r\n  }\r\n\r\n  /**\r\n   * Updates the existing items by replacing their html\r\n   */\r\n  updateExistingItems(){\r\n    this.items.forEach((item, index) => {\r\n      Array.from(document.getElementsByClassName(`budgie-${this.budgieId}-${index}`)).forEach((element) => {\r\n        // If the element has changed then update, otherwise do nothing\r\n\r\n        let newElement = BudgieDom.createBudgieElement(this, item, index);\r\n        // update the element if it does not currently match\r\n        if (element.innerHTML !== newElement.innerHTML) {\r\n          element.innerHTML = newElement.innerHTML;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calls both updateListStart and updateListEnding in the correct order\r\n   * @param method\r\n   */\r\n  updateBeginningAndEndingItems(method) {\r\n    this.updateListStart();\r\n    this.updateListEnding(method);\r\n  }\r\n\r\n  /**\r\n   * Updates the duplicated elements that come before the real budgie elements\r\n   */\r\n  updateListStart() {\r\n    let numberAtTop;\r\n    if (this.hasOddEnding()) {\r\n      numberAtTop = this.numberLeftWithOddEnding();\r\n    } else {\r\n      numberAtTop = this.isHorizontal() ? this.options.numberHigh : this.options.numberWide;\r\n    }\r\n\r\n    let realElements = Array.from(document.querySelectorAll(`.budgie-item-${this.budgieId}:not(.budgie-item-${this.budgieId}--duplicate)`));\r\n\r\n    // Trim the number of elements across one row to get rid of the bottom dupes\r\n    let dupedElements = Array.from(document.querySelectorAll(`.budgie-item-${this.budgieId}.budgie-item-${this.budgieId}--duplicate`));\r\n    let topOfDupedElements = dupedElements.slice(0, dupedElements.length - this.elementsOnScreen());\r\n\r\n    // These elements should become the new duped top row\r\n    let lastRowOfRealElements = realElements.slice(realElements.length - numberAtTop, realElements.length);\r\n\r\n    const firstRealElement = realElements[0];\r\n\r\n    // If there are more existing elements than we need, then trim that list\r\n    if(topOfDupedElements.length > lastRowOfRealElements.length) {\r\n      let numberOff = topOfDupedElements.length - lastRowOfRealElements.length\r\n\r\n      for(let i = 0; i < numberOff; i += 1) {\r\n        topOfDupedElements[i].parentNode.removeChild(topOfDupedElements[i]);\r\n        topOfDupedElements.shift();\r\n      }\r\n    }\r\n\r\n    // Exit early if the list is not long enough to scroll\r\n    if(this.fitsInContainer()){ return; }\r\n\r\n    // Update the existing elements, and add new if needed\r\n    lastRowOfRealElements.forEach((element, index) => {\r\n      let ele = element.cloneNode(true);\r\n      ele.classList.add(`budgie-item-${this.budgieId}--duplicate`);\r\n      if(topOfDupedElements[index]){\r\n        topOfDupedElements[index].outerHTML = ele.outerHTML\r\n      } else {\r\n        firstRealElement.parentNode.insertBefore(ele, firstRealElement);\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Updates the Duplicated elements that are on the end of the list.\r\n   * @param method\r\n   * @param redraw\r\n   */\r\n  updateListEnding(method, redraw=false){\r\n    let operator;\r\n    if(method === 'remove'){\r\n      operator = 1\r\n    } else if(method === 'add'){\r\n      // this covers 'add'\r\n      operator = -1\r\n    } else {\r\n      throw new Error(\"Only 'add' and 'remove' are supported arguments\")\r\n    }\r\n\r\n    if(redraw){\r\n      Array.from(document.getElementsByClassName(`budgie-item-${this.budgieId}--filler`)).forEach(element =>\r\n        element.parentNode.removeChild(element));\r\n    }\r\n\r\n    if(this.hasOddEnding()){\r\n      if(document.getElementsByClassName(`budgie-item-${this.budgieId}--filler`).length === 0) {\r\n        let lastElements = Array.from(document.getElementsByClassName(`budgie-${this.budgieId}-${this.items.length - 1}`));\r\n        let firstElements = Array.from(document.getElementsByClassName(`budgie-${this.budgieId}-${this.items.length - this.numberLeftWithOddEnding()}`));\r\n        // Put fill around all elements that need it. At the top, and the bottom.\r\n        lastElements.forEach(lastElement => {\r\n          lastElement.parentNode.insertBefore(BudgieDom.createBudgieFillerElement(this), lastElement.nextSibling);\r\n        })\r\n        firstElements.forEach(firstElement => {\r\n          firstElement.parentNode.insertBefore(BudgieDom.createBudgieFillerElement(this), firstElement);\r\n        })\r\n      } else {\r\n        Array.from(document.getElementsByClassName(`budgie-item-${this.budgieId}--filler`)).forEach((element) => {\r\n          element.classList.remove(`budgie-item-${this.budgieId}--filler-${this.numberLeftWithOddEnding() + operator}`);\r\n          element.classList.add(`budgie-item-${this.budgieId}--filler-${this.numberLeftWithOddEnding()}`);\r\n        });\r\n      }\r\n    } else {\r\n      Array.from(document.getElementsByClassName(`budgie-item-${this.budgieId}--filler`)).forEach(element =>\r\n        element.parentNode.removeChild(element));\r\n    }\r\n\r\n    // If all elements fit in the container and scrolling is not needed\r\n    if(this.fitsInContainer()) {\r\n      Array.from(document.getElementsByClassName(`budgie-item-${this.budgieId}--duplicate`)).forEach(element =>\r\n        element.parentNode.removeChild(element));\r\n\r\n      // Append an extra div so that new items can be added\r\n      if(document.getElementsByClassName(`budgie-item-${this.budgieId}--blank`).length === 0){\r\n        let blankEle = document.createElement('div');\r\n        blankEle.classList.add(`budgie-item-${this.budgieId}--blank`);\r\n        this.budgieContainer.appendChild(blankEle);\r\n      }\r\n    }\r\n\r\n    if(!this.fitsInContainer() && document.getElementsByClassName(`budgie-item-${this.budgieId}--duplicate-ending`).length === 0){\r\n      this.appendEndingItems();\r\n\r\n      Array.from(document.getElementsByClassName(`budgie-item-${this.budgieId}--blank`)).forEach(blankEle =>\r\n        blankEle.parentNode.removeChild(blankEle));\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Will reset the budgie elements scrollProperty if it hits a wrap point.\r\n  * @param {string} scrollDirection - The scroll direction of the given budgie instance.\r\n  *   can be 'scrollTop' or 'scrollLeft'\r\n  * @returns undefined\r\n  * */\r\n  onScroll(scrollDirection) {\r\n    if(!this.scrollContainerSize) {\r\n      this.scrollContainerSize = this.scrollSizeMeasurement();\r\n    }\r\n\r\n    if(!this.budgieElementMeasurement) {\r\n      let budgieElement = BudgieDom.measureElementWidthAndHeight(`.budgie-item-${this.budgieId}`);\r\n      this.budgieElementMeasurement = Math.floor(this.isHorizontal() ? budgieElement.width : budgieElement.height);\r\n    }\r\n\r\n    // console.log('scroll at: ' + this.parentContainer[scrollDirection], 'container size: ' + this.scrollContainerSize, 'element size: ' + this.budgieElementMeasurement)\r\n\r\n    if((this.parentContainer[scrollDirection] >= this.scrollContainerSize + this.budgieElementMeasurement)) {\r\n      this.parentContainer[scrollDirection] = this.budgieElementMeasurement;\r\n    } else if((this.parentContainer[scrollDirection] <= 0 )) {\r\n      this.parentContainer[scrollDirection] = this.scrollContainerSize;\r\n    }\r\n  }\r\n\r\n  onMouseMove(event, scrollDirection) {\r\n    // If the mouse is not down, then we don't care, bail early\r\n    if(!this.mouseDown) { return }\r\n\r\n    this.parentContainer[scrollDirection] -= this.isHorizontal() ? event.movementX : event.movementY;\r\n    console.log(\"mouse moved\", event)\r\n  }\r\n\r\n  /**\r\n   * Sets up the budgie scroller to be ready for use\r\n   */\r\n  budgieSetup() {\r\n    this.budgieContainer = BudgieDom.setupBudgieContainer(this);\r\n    BudgieDom.setupBudgieCSS(this);\r\n    BudgieDom.insertBudgieElements(this);\r\n    // Only append extra items, and bind the scroll event if this is infinite scroll.\r\n    if(this.options.infiniteScroll){\r\n      this.appendEndingItems();\r\n      this.prependStartingItems();\r\n      BudgieDom.setupBudgieScrollProperties(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Controls the scrolling animation when budgie is set to autoscroll\r\n   */\r\n  budgieAnimate() {\r\n    // Will not animate if autoScroll is off\r\n    if(!this.options.autoScroll) { return }\r\n\r\n    // How many times the animation should run per second\r\n    const fps =  this.options.fps;\r\n\r\n    // Will be either scrollTop or scrollLeft\r\n    let scrollDirection = this.scrollProperty();\r\n\r\n    // The current value of the scrollDirection\r\n    let currentScroll;\r\n\r\n    // The measurement of the budgie container\r\n    let budgieContainerMeasurements =\r\n      BudgieDom.measureElementWidthAndHeight(`.budgie-container-${this.budgieId}`);\r\n\r\n    // The axis measurement based on the direction\r\n    let viewMeasure = (this.isHorizontal()) ?\r\n      budgieContainerMeasurements.width : budgieContainerMeasurements.height;\r\n\r\n    // Calculate scrollspeed, this will dictate how far the budgie scroller moves with each frame\r\n    // This must be a whole number > 0 so we round up.\r\n    let scrollSpeed = Math.ceil(viewMeasure / this.options.secondsOnPage / fps);\r\n\r\n    // Clear out any existing animations, which allows for use of this on redraws\r\n    this.stopAnimate();\r\n\r\n    // Only animate if the elements do not all fit in the container\r\n    if(!this.fitsInContainer()){\r\n      this.interval = setInterval(() => {\r\n        // Get the current value of the scroll\r\n        currentScroll = this.budgieContainer.parentElement[scrollDirection];\r\n\r\n        // Add or subtract from the current value based on inverted or not\r\n        this.options.inverted ? (currentScroll += scrollSpeed) : (currentScroll -= scrollSpeed);\r\n\r\n        // Apply the new scroll value\r\n        this.budgieContainer.parentElement[scrollDirection] = currentScroll;\r\n      }, 1000/fps);\r\n    } else {\r\n      // Set the scroll property to 0 if all elements fit in the container\r\n      // This is used when animate is called on a redraw\r\n      this.budgieContainer.parentElement[scrollDirection] = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Will toggle the inverted property of the Budgie element\r\n   */\r\n  changeInversion(){\r\n    this.options.inverted = !this.options.inverted;\r\n  }\r\n\r\n  /**\r\n   * Clears the interval that controls the scrolling\r\n   * @returns {boolean}\r\n   */\r\n  stopAnimate() {\r\n    if(!this.interval) return false;\r\n    window.clearInterval(this.interval);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Removes the Budgie element from the DOM\r\n   */\r\n  removeBudgie() {\r\n    this.stopAnimate();\r\n    this.budgieContainer.parentElement.classList.remove(`budgie-container-parent-${this.budgieId}`);\r\n    this.budgieContainer.parentElement.removeChild(this.budgieContainer);\r\n  }\r\n}\r\n\r\n// Set Budgie as a global variable for use\r\nif( typeof global !== 'undefined')\r\n  global.Budgie = Budgie;\r\n"]}